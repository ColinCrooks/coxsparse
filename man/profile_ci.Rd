% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{profile_ci}
\alias{profile_ci}
\title{profile_ci}
\usage{
profile_ci(
  covrowlist_in,
  beta_in,
  id_in,
  coval_in,
  weights_in,
  timein_in,
  timeout_in,
  Outcomes_in,
  OutcomeTotals_in,
  OutcomeTotalTimes_in,
  lambda,
  nvar,
  MSTEP_MAX_ITER,
  decimals,
  confint_width,
  threadn
)
}
\arguments{
\item{covrowlist_in}{A list in R of integer vectors of length nvar.
Each entry in the list corresponds to a covariate.
Each vector contains the indices for the rows in the coval list
that correspond to that vector. Maximum value of any indices corresponds
therefore to the length of coval.}

\item{beta_in}{A double vector of starting values for the coefficients
of length nvar.}

\item{id_in}{An integer vector referencing for each covariate value the
corresponding unique patient time in the time and outcome vectors. Of the
same length as coval. The maximum value is the length of timein and timeout.}

\item{coval_in}{A double vector of each covariate value sorted first by
time then by patient and by order of the covariates to be included in model.
Of the same longth as id_in.}

\item{weights_in}{A double vector of weights to be applied to each unique
patient time point. Of the same length as timein, timeout and outcomes.}

\item{timein_in}{An integer vector of the start time for each unique patient
time row, so would be the time that a patient's corresponding
covariate value starts. Of the same length as weights, timeout, and outcomes.}

\item{timeout_in}{An integer vector of the end time for each unique patient
time row, so would be the time that a patient's corresponding outcome
occurs. Of the same length as weights, timein, timeout and outcomes.}

\item{Outcomes_in}{An integer vector of 0 (censored) or 1 (outcome) for the
corresponding unique patient time. Of the same length as timein, timeout and
weights}

\item{OutcomeTotals_in}{An integer vector of the total number of outcomes that
occur at each unique time point. Length is the number of unique times in cohort.}

\item{OutcomeTotalTimes_in}{An integer vector of each unique time point that
outcome events are observed in the cohort. Same length as OutcomeTotals.}

\item{lambda}{Penalty weight to include for ridge regression: -log(sqrt(lambda)) * nvar}

\item{nvar}{Number of covariates}

\item{MSTEP_MAX_ITER}{Maximum number of iterations}

\item{decimals}{Precision required for confidence intervals defined by
number of decimal places.}

\item{confint_width}{e.g. for 95\% confidence interval confint_width = 0.95.}

\item{threadn}{Number of threads to be used - caution as will crash if specify more
threads than available memory for copying data for each thread.}
}
\value{
Numeric matrix with nvar rows and lower and upper confidence intervals in 2 columns.
}
\description{
Description
}
\details{
The purpose of this implementation is for fitting a Cox model
to data when coxph from the survival package fails due to
not enough memory to hold the model and data matrices. The
focus is therefore on being memory efficient, which is a
slower algorithm than in coxph, but parallelisation is
possible to offset this. In this situation compiling the
code for the native computer setup would be preferable
to providing a standard package binary for multiple systems.
The Makevars file therefore contains the options for this.

A function using the same data structure to calculate profile
confidence intervals with a crude search pattern is provided.

The data structure is a deconstructed sparse matrix.

This uses the same implementation of a Cox proportional hazards model
as cox_reg_sparse_parallel
OpenMP is used to parallelise the updating of cumulative
values and rcppParallel objects are used to make R objects
threadsafe.
}
